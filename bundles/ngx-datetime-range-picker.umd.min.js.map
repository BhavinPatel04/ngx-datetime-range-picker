{"version":3,"sources":["ng://ngx-datetime-range-picker/src/app/pipes/objNgFor.pipe.ts","ng://ngx-datetime-range-picker/src/app/dateTimeRangePicker/dateTimeRangePicker.constants.ts","ng://ngx-datetime-range-picker/src/app/dateTimeRangePicker/dateTimeRangePicker.utility.service.ts","ng://ngx-datetime-range-picker/src/app/dateTimeRangePicker/dateTimeRangePicker.component.ts","ng://ngx-datetime-range-picker/src/app/dateTimeRangePicker/dateTimeRangePicker.module.ts"],"names":["ObjNgFor","prototype","transform","value","args","Object","keys","Pipe","name","pure","moment","require","USA_MST_TZ_CODE","USA_TZ_CODE","EU_TZ_CODE","DateRangePickerConstants","DEFAULT","TYPE","INPUT_CLASS","DATE_FROMAT","TIME_FORMAT","START_DATE","format","END_DATE","MIN_DATE","subtract","startOf","MAX_DATE","START_TIME","END_TIME","MODEL_KEYS","TZ_CODE","CONSTANT","MONTHS_AVAILABLE","TZ_CODES","OFFSETS","_a","SO","WO","TZ_NAMES","_b","_","DEFAULT_TYPE","DEFAULT_INPUT_CLASS","DEFAULT_DATE_FROMAT","DEFAULT_TIME_FORMAT","DEFAULT_START_DATE","DEFAULT_END_DATE","DEFAULT_MIN_DATE","DEFAULT_MAX_DATE","DEFAULT_START_TIME","DEFAULT_END_TIME","DEFAULT_MODEL_KEYS","DEFAULT_TIMEZONE_CODE","DateTimeRangePickerUtilityService","getNotAvailableText","getDefaultAriaLabelOptions","inputField","getDefaultOptions","dateArray","startDate","endDate","minDate","maxDate","startTime","endTime","getDefaultSettings","type","modelKeys","selectedModel","showTimezoneSelect","useLocalTimezone","timePicker","inputClass","inputDateFormat","viewDateFormat","outputDateFormat","singleDatePicker","componentDisabled","placeholder","showRowNumber","availableRanges","showRanges","disableWeekends","disableWeekdays","retailCalendar","displayBeginDate","displayEndDate","ariaLabels","this","formatDateToDefaultFormat","date","fromattedDate","isNaN","Number","_f","console","warn","formatTimeToDefaultFormat","time","formattedTime","indexOf","getFrequencyColumnHeader","getCalendarRowNumberText","number","createDefaultRanges","config","ranges","cloneDeep","formattedMaxDate","getSanitizedDateArray","sanitizedDateArray","forEach","valueOf","endOf","push","uniqBy","getNumberOfWeeks","numberOfWeeks","monthStart","day","monthEnd","Math","ceil","getYearlyWeekCount","year","weekCount","yearStartDate","yearEndDate","yearEndWeekEndDate","yearStartWeekEndDate","yearSartWeekNumber","getWeekNumber","getMonthsAvailable","selectedYear","months","minDatems","maxDatems","yearStartms","yearEndms","minDateMonthNumber","month","diff","maxMonths","length","i","getYearsAvailable","years","minYear","getSelectedYear","reverse","isDateAvailable","monthStartDate","monthEndDate","available","some","d","isWeekend","isWeekday","isDateInRange","inRange","isDateActive","side","active","isDateToday","today","todayDate","firstLastDay","getFirstLastDay","firstDay","lastDay","getCalendarRowVariables","options","variables","monthStartWeekNumber","dateRows","rowNumber","columns","charAt","getCalendarRowItemVariables","firstLastDayObject","currentItemDate","rowItemText","itemCount","rowItem","isNil","yearStartDate_1","add","quarter","isRowIemValid","valid","validWeekCount","formatStartDate","returnFormat","formattedStartDate","getLocalTimezone","tz","exec","Date","toString","getZoneDate","toLocaleString","timeZone","getZoneToday","formatToZoneDate","formattedDate","convertToViewTimeItem","item","stringified_item","datems","getTime","getDay","Injectable","focus","blur","DateTimeRangePickerComponent","element","renderer","dateTimeRangePickerUtilityService","_this","canBeEmpty","dateRangeModelChange","EventEmitter","dateRangeChanged","inputFocusBlur","selectedDate","sides","dates","left","right","calendarAvailable","showCalendar","customRange","selectedDateText","dateTitleText","weekDayOptions","selectedMonth","activeItem","activeStartDate","activeEndDate","activeRange","frequencyColumnHeader","isValidFilter","isUserModelChange","timezones","localTimezone","todayTime","timeItems","times","selectedHour","selectedMinute","selectedMeridian","settings","assign","selectedTimezone","listenGlobal","event","target","className","nativeElement","contains","onCalendarClose","ngOnChanges","changes","currentValue","merge","dateRangeModel","firstChange","previousValue","optionService","subscribe","dateOptions","isObject","isArray","plain","err","error","init","onDateRangeInputChange","dateRangeSelected","setDisabledState","disabled","onComponentClick","onFocusInput","emit","reason","InputFocusBlur","onBlurInput","filterInputBox","classList","remove","isPrevAvailale","isNextAvailale","getCalendarColspan","getCalendarRowItemColspan","getDatecharacteristics","currentDate","currentMonthStartDate","currentMonthEndDate","onClickPrevious","generateCalendar","onClickNext","onCellClick","itemCell","doApply","onCellMouseEnter","hoverItemFirstDate","getAttribute","hoverItemLastDate","activeItemInputFieldText","innerText","forOwn","sideDates","itemRows","rows","items","hoverItemDate","onCellMouseLeave","updateActiveItemInputField","onRangeClick","rangeLabel","updateCalendar","setActiveItemOnRangeClick","generateTimePicker","onCalendarLabelChange","label","onTimeLabelChange","timeItem","split","onTimeApply","updateInputField","initialize","parseOptions","undefined","k","selectTimeZone","parseOptionsToDefaultDateFormat","processDateRangeModel","handleDateArray","sanitizeDates","processRanges","doDateRangeModelChange","timezoneSupport","defaultTimezone","onTimezoneChange","minTime","maxTime","isEmpty","dateRangeMinDate","dateRangeMaxDate","dateRangeStartDate","dateRangeEndDate","dateRangeDateArray","dateRangeMinTime","dateRangeMaxTime","dateRangeStartTime","dateRangeEndTime","sortBy","selectActiveRange","rangeModel","range","updateActiveItem","calendarLabel","week","numberOfRows","datecharacteristics","rowVariables","rowItemVariables","dateRowObj","rowNumberText","rowOptions","rowItemOptions","itemObj","timeObject","hour","minute","meridian","startHour","startMinute","startDateEpoch","endDateEpoch","h","stringified_h","m","stringified_m","capitalize","startDateText","endDataText","dateText","itemFirstDate","itemLastDate","itemText","getDateRangeModelItem","getDateRangeModel","dRModel","dateRangeModelItem","outputStartDate","outputEndDate","getSelectedTimeItemText","Component","selector","template","encapsulation","ViewEncapsulation","None","ElementRef","Renderer","Input","Output","ViewChild","declarations","NgxDateTimeRangePickerModule","forRoot","ngModule","providers","NgModule","imports","BrowserModule","BrowserAnimationsModule","FormsModule","MatFormFieldModule","MatButtonModule","MatInputModule","MatIconModule","MatSelectModule","exports"],"mappings":"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","sourcesContent":["import { Pipe, PipeTransform } from \"@angular/core\";\n\n/**\n * Iterate over {key: value}\n * Returns the keys of the object\n * Usage:\n *    let objKey of obj | ObjNgFor\n * Example:\n *    let obj = {a: 1, b: 2};\n *    *ngFor=\"let key of obj | ObjNgFor\"\n *    {{keys}}: {{obj[key]}}\n */\n\n@Pipe({ name: \"ObjNgFor\", pure: false })\nexport class ObjNgFor implements PipeTransform {\n  public transform(value: any, args: any[] = null): any {\n    return Object.keys(value); // .map(key => value[key]);\n  }\n}\n","declare var require: any;\nconst moment = require(\"moment\");\nconst USA_MST_TZ_CODE = \"MST\";\nconst USA_TZ_CODE = \"PST\";\nconst EU_TZ_CODE = \"CET\";\n\nexport const DateRangePickerConstants = {\n  DEFAULT: {\n    TYPE: \"daily\",\n    INPUT_CLASS: \"m1drp\",\n    DATE_FROMAT: \"YYYY-MM-DD\",\n    TIME_FORMAT: \"HH:mm\",\n    START_DATE: moment().format(\"YYYY-MM-DD\"),\n    END_DATE: moment().format(\"YYYY-MM-DD\"),\n    MIN_DATE: moment()\n      .subtract(2, \"year\")\n      .startOf(\"year\")\n      .format(\"YYYY-MM-DD\"),\n    MAX_DATE: moment().format(\"YYYY-MM-DD\"),\n    START_TIME: \"00:00\",\n    END_TIME: \"23:59\",\n    MODEL_KEYS: [\"daily\", \"weekly\", \"monthly\", \"quarterly\", \"yearly\"],\n    TZ_CODE: USA_MST_TZ_CODE,\n  },\n  CONSTANT: {\n    MONTHS_AVAILABLE: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n    USA_MST_TZ_CODE,\n    USA_TZ_CODE,\n    EU_TZ_CODE,\n    TZ_CODES: [USA_TZ_CODE, EU_TZ_CODE],\n    OFFSETS: {\n      [USA_TZ_CODE]: {\n        SO: -7,\n        WO: -8,\n      },\n      [EU_TZ_CODE]: {\n        SO: 1,\n        WO: 0,\n      },\n    },\n    TZ_NAMES: {\n      [USA_MST_TZ_CODE]: \"America/Phoenix\",\n      [USA_TZ_CODE]: \"America/Los_Angeles\",\n      [EU_TZ_CODE]: \"Europe/Berlin\",\n    },\n  },\n};\n","import { Injectable } from \"@angular/core\";\nimport { DateRangePickerConstants } from \"./dateTimeRangePicker.constants\";\nimport { AriaLabelsOptions, DateTimeRangePickerOptions, DateTimeRangePickerSettings } from \"./interfaces/index\";\n\ndeclare var require: any;\nconst moment = require(\"moment\");\nconst _ = require(\"lodash\");\n\nconst DEFAULT_TYPE = DateRangePickerConstants.DEFAULT.TYPE;\nconst DEFAULT_INPUT_CLASS = DateRangePickerConstants.DEFAULT.INPUT_CLASS;\nconst DEFAULT_DATE_FROMAT = DateRangePickerConstants.DEFAULT.DATE_FROMAT;\nconst DEFAULT_TIME_FORMAT = DateRangePickerConstants.DEFAULT.TIME_FORMAT;\nconst DEFAULT_START_DATE = DateRangePickerConstants.DEFAULT.START_DATE;\nconst DEFAULT_END_DATE = DateRangePickerConstants.DEFAULT.END_DATE;\nconst DEFAULT_MIN_DATE = DateRangePickerConstants.DEFAULT.MIN_DATE;\nconst DEFAULT_MAX_DATE = DateRangePickerConstants.DEFAULT.MAX_DATE;\nconst DEFAULT_START_TIME = DateRangePickerConstants.DEFAULT.START_TIME;\nconst DEFAULT_END_TIME = DateRangePickerConstants.DEFAULT.END_TIME;\nconst DEFAULT_MODEL_KEYS = DateRangePickerConstants.DEFAULT.MODEL_KEYS;\nconst MONTHS_AVAILABLE = DateRangePickerConstants.CONSTANT.MONTHS_AVAILABLE;\nconst DEFAULT_TIMEZONE_CODE = DateRangePickerConstants.DEFAULT.TZ_CODE;\nconst EU_TZ_CODE = DateRangePickerConstants.CONSTANT.EU_TZ_CODE;\nconst TZ_NAMES = DateRangePickerConstants.CONSTANT.TZ_NAMES;\n\n@Injectable()\nexport class DateTimeRangePickerUtilityService {\n  public getNotAvailableText(): string {\n    return \"N/A\";\n  }\n  public getDefaultAriaLabelOptions(): AriaLabelsOptions {\n    return {\n      inputField: \"Date Range Input Field\" as string,\n    };\n  }\n\n  public getDefaultOptions(): DateTimeRangePickerOptions {\n    return {\n      dateArray: [] as string[],\n      startDate: DEFAULT_START_DATE as string,\n      endDate: DEFAULT_END_DATE as string,\n      minDate: DEFAULT_MIN_DATE as string,\n      maxDate: DEFAULT_MAX_DATE as string,\n      startTime: DEFAULT_START_TIME as string,\n      endTime: DEFAULT_END_TIME as string,\n    };\n  }\n\n  public getDefaultSettings(): DateTimeRangePickerSettings {\n    return {\n      type: DEFAULT_TYPE as string,\n      modelKeys: DEFAULT_MODEL_KEYS as string[],\n      selectedModel: undefined as string,\n      showTimezoneSelect: false as boolean,\n      useLocalTimezone: false as boolean,\n      timePicker: false as boolean,\n      inputClass: DEFAULT_INPUT_CLASS as string,\n      inputDateFormat: null as string,\n      viewDateFormat: DEFAULT_DATE_FROMAT as string,\n      outputDateFormat: DEFAULT_DATE_FROMAT as string,\n      singleDatePicker: false as boolean,\n      componentDisabled: false as boolean,\n      placeholder: \"Select Date\" as string,\n      showRowNumber: true as boolean,\n      availableRanges: {} as Object,\n      showRanges: true as boolean,\n      disableWeekends: false as boolean,\n      disableWeekdays: false as boolean,\n      retailCalendar: false as boolean,\n      displayBeginDate: false as boolean,\n      displayEndDate: false as boolean,\n      ariaLabels: this.getDefaultAriaLabelOptions() as AriaLabelsOptions,\n    };\n  }\n\n  public formatDateToDefaultFormat(date, format = DEFAULT_DATE_FROMAT): string {\n    let fromattedDate = null;\n    if (date) {\n      if (!isNaN(Number(date))) {\n        fromattedDate = moment(date).format(DEFAULT_DATE_FROMAT);\n      } else {\n        if (!format) {\n          format = moment(date)._f;\n        } else {\n          if (format != moment(date)._f) {\n            console.warn(\n              \"M1 Date Range Picker: The provided Input Date Format and provided Date are not in same format\",\n            );\n          }\n        }\n        if (!format) {\n          console.warn(\n            \"M1 Date Range Picker: The provided date is not in any known format. Please pass the format or pass the date in any known format\",\n          );\n        }\n        fromattedDate = moment(date, format).format(DEFAULT_DATE_FROMAT);\n      }\n    }\n\n    return fromattedDate;\n  }\n\n  public formatTimeToDefaultFormat(time) {\n    let formattedTime = null;\n    if (time) {\n      if (time.indexOf(\":\") > -1) {\n        if (time.indexOf(\"AM\") > -1 || time.indexOf(\"PM\") > -1) {\n          formattedTime = moment(time, \"h:mm A\").format(DEFAULT_TIME_FORMAT);\n        } else {\n          formattedTime = time;\n        }\n      } else {\n        console.warn(\"M1 Date Range Picker: The provided time is not in correct format. Format: HH:mm or hh:mm A\");\n      }\n    }\n    return formattedTime;\n  }\n\n  public getFrequencyColumnHeader(type) {\n    return (() => {\n      switch (type) {\n        case \"daily\":\n          return \"W#\";\n        case \"weekly\":\n          return \"\";\n        case \"monthly\":\n          return \"Q#\";\n        case \"quarterly\":\n          return \"Year\";\n        case \"yearly\":\n          return \"\";\n      }\n    })();\n  }\n\n  public getCalendarRowNumberText(type, number) {\n    return (() => {\n      switch (type) {\n        case \"daily\":\n          return `W${number}`;\n        case \"weekly\":\n          return \"\";\n        case \"monthly\":\n          return `Q${number}`;\n        case \"quarterly\":\n          return `${number}`;\n        case \"yearly\":\n          return \"\";\n      }\n    })();\n  }\n\n  public createDefaultRanges(config): Object {\n    const ranges = {};\n    const type = config.type;\n    const maxDate = _.cloneDeep(config.maxDate);\n    const formattedMaxDate = this.formatDateToDefaultFormat(maxDate, DEFAULT_DATE_FROMAT);\n\n    if (type == \"daily\") {\n      ranges[\"Last 7 Days\"] = {\n        startDate: moment(formattedMaxDate, DEFAULT_DATE_FROMAT)\n          .subtract(6, \"days\")\n          .format(DEFAULT_DATE_FROMAT),\n        endDate: formattedMaxDate,\n      };\n      ranges[\"Last 30 Days\"] = {\n        startDate: moment(formattedMaxDate, DEFAULT_DATE_FROMAT)\n          .subtract(29, \"days\")\n          .format(DEFAULT_DATE_FROMAT),\n        endDate: formattedMaxDate,\n      };\n      ranges[\"Last 90 Days\"] = {\n        startDate: moment(formattedMaxDate, DEFAULT_DATE_FROMAT)\n          .subtract(89, \"days\")\n          .format(DEFAULT_DATE_FROMAT),\n        endDate: formattedMaxDate,\n      };\n    } else if (type == \"weekly\") {\n      ranges[\"Last 4 Weeks\"] = {\n        startDate: moment(formattedMaxDate, DEFAULT_DATE_FROMAT)\n          .subtract(3, \"weeks\")\n          .format(DEFAULT_DATE_FROMAT),\n        endDate: formattedMaxDate,\n      };\n      ranges[\"Last 13 Weeks\"] = {\n        startDate: moment(formattedMaxDate, DEFAULT_DATE_FROMAT)\n          .subtract(12, \"weeks\")\n          .format(DEFAULT_DATE_FROMAT),\n        endDate: formattedMaxDate,\n      };\n      ranges[\"Last 26 Weeks\"] = {\n        startDate: moment(formattedMaxDate, DEFAULT_DATE_FROMAT)\n          .subtract(25, \"weeks\")\n          .format(DEFAULT_DATE_FROMAT),\n        endDate: formattedMaxDate,\n      };\n    } else if (type == \"monthly\") {\n      // if(retailCalendar) ? subtract(3, 'months')....so on for 'Last 3 Months'....so on\n      ranges[\"Last 3 Months\"] = {\n        startDate: moment(formattedMaxDate, DEFAULT_DATE_FROMAT)\n          .subtract(2, \"months\")\n          .format(DEFAULT_DATE_FROMAT),\n        endDate: formattedMaxDate,\n      };\n      ranges[\"Last 6 Months\"] = {\n        startDate: moment(formattedMaxDate, DEFAULT_DATE_FROMAT)\n          .subtract(5, \"months\")\n          .format(DEFAULT_DATE_FROMAT),\n        endDate: formattedMaxDate,\n      };\n      ranges[\"Last 9 Months\"] = {\n        startDate: moment(formattedMaxDate, DEFAULT_DATE_FROMAT)\n          .subtract(8, \"months\")\n          .format(DEFAULT_DATE_FROMAT),\n        endDate: formattedMaxDate,\n      };\n    } else if (type == \"quarterly\") {\n      // if(retailCalendar) ? subtract(1, 'quarters')....so on for 'Last 2 Quarters'....so on\n      ranges[\"Last 2 Quarters\"] = {\n        startDate: moment(formattedMaxDate, DEFAULT_DATE_FROMAT)\n          .subtract(1, \"quarters\")\n          .format(DEFAULT_DATE_FROMAT),\n        endDate: formattedMaxDate,\n      };\n      ranges[\"Last 4 Quarters\"] = {\n        startDate: moment(formattedMaxDate, DEFAULT_DATE_FROMAT)\n          .subtract(3, \"quarters\")\n          .format(DEFAULT_DATE_FROMAT),\n        endDate: formattedMaxDate,\n      };\n    } else if (type == \"yearly\") {\n      ranges[\"Last Year\"] = {\n        startDate: moment(formattedMaxDate, DEFAULT_DATE_FROMAT)\n          .subtract(1, \"year\")\n          .format(DEFAULT_DATE_FROMAT),\n        endDate: formattedMaxDate,\n      };\n    }\n    ranges[\"Custom Range\"] = { startDate: null, endDate: null };\n    return ranges;\n  }\n\n  public getSanitizedDateArray(config) {\n    const sanitizedDateArray = [];\n    const type = config.type;\n    const dateArray = config.dateArray;\n    const inputDateFormat = config.inputDateFormat;\n\n    // dateArray can have nulls\n    _.forEach(dateArray, (date) => {\n      if (date) {\n        let format = null;\n        if (isNaN(Number(date))) {\n          if (inputDateFormat) {\n            format = inputDateFormat;\n          } else {\n            format = moment(date)._f;\n          }\n        }\n\n        if (inputDateFormat != moment(date)._f) {\n          console.warn(\n            \"M1 Date Range Picker: Provided inputDateFormat != Date Format in dateArray. Converted dates might not be as expected\",\n          );\n        }\n\n        let value = format ? moment(date, format).format(format) : moment(date).valueOf();\n        if (type == \"weekly\") {\n          value = format\n            ? moment(date, format)\n                .endOf(\"week\")\n                .format(format)\n            : moment(date)\n                .endOf(\"week\")\n                .valueOf();\n        } else if (type == \"monthly\") {\n          value = format\n            ? moment(date, format)\n                .endOf(\"month\")\n                .format(format)\n            : moment(date)\n                .endOf(\"month\")\n                .valueOf();\n        } else if (type == \"quarterly\") {\n          value = format\n            ? moment(date, format)\n                .endOf(\"quarter\")\n                .format(format)\n            : moment(date)\n                .endOf(\"quarter\")\n                .valueOf();\n        } else if (type == \"yearly\") {\n          value = format\n            ? moment(date, format)\n                .endOf(\"year\")\n                .format(format)\n            : moment(date)\n                .endOf(\"year\")\n                .valueOf();\n        }\n        if (value) {\n          sanitizedDateArray.push(value);\n        } else {\n          console.warn(\n            \"M1 Date Range Picker: Values in Date Array are not in any known format. Please pass the format or pass the dates in any known format\",\n          );\n        }\n      }\n    });\n\n    return _.uniqBy(sanitizedDateArray);\n  }\n\n  public getNumberOfWeeks(date): number {\n    let numberOfWeeks = null;\n    if (date) {\n      const monthStart: number = moment(date, DEFAULT_DATE_FROMAT)\n        .startOf(\"month\")\n        .day();\n      const monthEnd: number = Number(\n        moment(date, DEFAULT_DATE_FROMAT)\n          .endOf(\"month\")\n          .format(\"D\"),\n      );\n      numberOfWeeks = Math.ceil((monthStart + monthEnd) / 7);\n    }\n    return numberOfWeeks;\n  }\n\n  public getYearlyWeekCount(year, retailCalendar?) {\n    let weekCount: number = null;\n    if (year) {\n      const yearStartDate = moment(year, \"YYYY\")\n        .startOf(\"year\")\n        .format(DEFAULT_DATE_FROMAT);\n      const yearEndDate = moment(year, \"YYYY\")\n        .endOf(\"year\")\n        .format(DEFAULT_DATE_FROMAT);\n      const yearEndWeekEndDate = moment(yearEndDate, DEFAULT_DATE_FROMAT)\n        .startOf(\"week\")\n        .format(DEFAULT_DATE_FROMAT);\n\n      const yearStartWeekEndDate = moment(yearStartDate, DEFAULT_DATE_FROMAT)\n        .endOf(\"week\")\n        .format(DEFAULT_DATE_FROMAT);\n\n      const yearSartWeekNumber = this.getWeekNumber(yearStartWeekEndDate);\n      const yearEndWeekNumber = this.getWeekNumber(yearEndWeekEndDate);\n      weekCount = yearEndWeekNumber - yearSartWeekNumber + 1;\n    }\n    return weekCount;\n  }\n\n  public getMonthsAvailable(minDate, maxDate, selectedYear) {\n    const months = [];\n    if (minDate && maxDate && selectedYear) {\n      let minDatems = moment(minDate, DEFAULT_DATE_FROMAT).valueOf();\n      let maxDatems = moment(maxDate, DEFAULT_DATE_FROMAT).valueOf();\n      const yearStartms = moment()\n        .year(selectedYear)\n        .startOf(\"year\")\n        .valueOf();\n      const yearEndms = moment()\n        .year(selectedYear)\n        .endOf(\"year\")\n        .valueOf();\n\n      if (minDatems < yearStartms) {\n        minDatems = yearStartms;\n      }\n      if (maxDatems > yearEndms) {\n        maxDatems = yearEndms;\n      }\n\n      let minDateMonthNumber = moment(minDatems).month();\n      const diff: number = moment(maxDatems).diff(moment(minDatems), \"months\");\n      const maxMonths = diff < MONTHS_AVAILABLE.length ? diff : MONTHS_AVAILABLE.length;\n\n      for (let i = 0; i <= maxMonths; i++) {\n        if (minDateMonthNumber >= MONTHS_AVAILABLE.length) {\n          months.push(MONTHS_AVAILABLE[minDateMonthNumber - MONTHS_AVAILABLE.length]);\n        } else {\n          months.push(MONTHS_AVAILABLE[minDateMonthNumber]);\n        }\n        minDateMonthNumber++;\n      }\n    }\n    return months;\n  }\n\n  public getYearsAvailable(config) {\n    const minDate = config ? config.minDate : \"\";\n    const maxDate = config ? config.maxDate : \"\";\n    const years = [];\n    if (minDate && maxDate) {\n      const minYear = Number(this.getSelectedYear(config, minDate, \"left\"));\n      const maxYear = Number(this.getSelectedYear(config, maxDate, \"right\"));\n      const diff = maxYear - minYear;\n\n      for (let i = 0; i <= diff; i++) {\n        years.push(`${minYear + i}`);\n      }\n    }\n    return years.reverse();\n  }\n\n  public isDateAvailable(date, minDate, maxDate, startDate, endDate, monthStartDate, monthEndDate, config): boolean {\n    let available = false;\n    const type = config.type;\n    const dateArray = config.dateArray ? config.dateArray : [];\n    const inputDateFormat = config.inputDateFormat;\n    const disableWeekends = config.disableWeekends;\n    const disableWeekdays = config.disableWeekdays;\n    if (type == \"daily\") {\n      minDate = minDate > monthStartDate ? minDate : monthStartDate;\n      maxDate = maxDate < monthEndDate ? maxDate : monthEndDate;\n    }\n\n    // if(date == minDate\n    //     || date == maxDate) {\n    //   available = true;\n    // }\n\n    if (date >= minDate && date <= maxDate) {\n      if (dateArray.length > 0) {\n        available = _.some(dateArray, (d) => {\n          let format = null;\n          if (isNaN(Number(date))) {\n            if (inputDateFormat) {\n              format = inputDateFormat;\n            } else {\n              format = moment(date)._f;\n            }\n          }\n          return moment(d, format).valueOf() == date;\n        });\n      } else {\n        available = true;\n      }\n\n      if (available) {\n        if (disableWeekends) {\n          available = !this.isWeekend(date);\n        }\n        if (disableWeekdays) {\n          available = !this.isWeekday(date);\n        }\n      }\n    }\n    return available;\n  }\n\n  public isDateInRange(\n    date,\n    minDate,\n    maxDate,\n    startDate,\n    endDate,\n    monthStartDate,\n    monthEndDate,\n    available,\n    config,\n  ): boolean {\n    let inRange = false;\n    const type = config.type;\n    const singleDatePicker = config.singleDatePicker;\n    if (!singleDatePicker) {\n      if (type == \"daily\") {\n        minDate = monthStartDate;\n        maxDate = monthEndDate;\n      }\n      if (date >= startDate && date <= endDate && date >= minDate && date <= maxDate) {\n        if (available) {\n          inRange = true;\n        }\n      }\n    }\n    return inRange;\n  }\n\n  public isDateActive(date, startDate, endDate, side): boolean {\n    let active = false;\n    if ((date == startDate && side == \"left\") || (date == endDate && side == \"right\")) {\n      active = true;\n    }\n    return active;\n  }\n\n  public isDateToday(date, config): boolean {\n    let today = false;\n    const todayDate = moment()\n      .startOf(\"day\")\n      .valueOf();\n    const type = config.type;\n    const firstLastDay = this.getFirstLastDay(moment(todayDate).format(DEFAULT_DATE_FROMAT), type);\n    const firstDay = moment(firstLastDay.firstDay, DEFAULT_DATE_FROMAT).valueOf();\n    const lastDay = moment(firstLastDay.lastDay, DEFAULT_DATE_FROMAT).valueOf();\n    if (date >= firstDay && date <= lastDay) {\n      today = true;\n    }\n    return today;\n  }\n\n  public isWeekday(date, format?) {\n    return !this.isWeekend(date, format);\n  }\n\n  public isWeekend(date, format?) {\n    if (!format) {\n      format = null;\n    }\n    const day = moment(date, format).day();\n    return day == 0 || day == 6 ? true : false;\n  }\n\n  public getCalendarRowVariables(options) {\n    const variables: any = {};\n    const type = options.type;\n    const monthStartWeekNumber = options.monthStartWeekNumber;\n    const dateRows = options.dateRows;\n    const year = `${options.year}`;\n\n    if (type == \"daily\") {\n      variables.rowNumber = monthStartWeekNumber + dateRows;\n      variables.columns = 6;\n    } else if (type == \"weekly\") {\n      // variables.rowNumber = `${(dateRows*2)+1} - ${(dateRows*2)+2}`;\n      variables.rowNumber = ``;\n      variables.columns = 6;\n    } else if (type == \"monthly\") {\n      variables.rowNumber = dateRows + 1;\n      variables.columns = 2;\n    } else if (type == \"quarterly\") {\n      variables.rowNumber = year.charAt(dateRows);\n      variables.columns = 0;\n    } else if (type == \"yearly\") {\n      variables.rowNumber = \"\";\n      variables.columns = 0;\n    }\n\n    return variables;\n  }\n\n  public getCalendarRowItemVariables(options) {\n    const variables: any = {\n      currentItemDate: \"\",\n      rowItemText: \"\",\n      itemCount: null,\n    };\n    const type = options.type;\n    const monthStartWeekNumber = options.monthStartWeekNumber;\n    const yearStartDate = options.yearStartDate;\n    const year = options.year;\n    const rowItem = options.rowItem;\n    const dateRows = options.dateRows;\n    const columns = options.columns;\n    const itemCount = rowItem + dateRows * columns + dateRows;\n    let currentItemDate = \"\";\n    let rowItemText = \"\";\n    let firstLastDayObject: any = {};\n\n    if (type == \"daily\") {\n      if (!_.isNil(monthStartWeekNumber) && !_.isNil(dateRows) && !_.isNil(year)) {\n        const yearStartDate = moment()\n          .year(year)\n          .startOf(\"year\")\n          .format(DEFAULT_DATE_FROMAT);\n        currentItemDate = moment(yearStartDate, DEFAULT_DATE_FROMAT)\n          .add(monthStartWeekNumber + dateRows - 1, \"week\")\n          .startOf(\"week\")\n          .add(rowItem, \"day\")\n          .format(DEFAULT_DATE_FROMAT);\n        rowItemText = moment(currentItemDate, DEFAULT_DATE_FROMAT).format(\"D\");\n      }\n    } else if (type == \"weekly\") {\n      if (!_.isNil(yearStartDate) && !_.isNil(itemCount)) {\n        currentItemDate = moment(yearStartDate, DEFAULT_DATE_FROMAT)\n          .add(itemCount, \"week\")\n          .endOf(\"week\")\n          .format(DEFAULT_DATE_FROMAT);\n        const weekNumber: any = itemCount + 1;\n        rowItemText = `W${weekNumber}`;\n      }\n    } else if (type == \"monthly\") {\n      if (!_.isNil(itemCount) && !_.isNil(year)) {\n        currentItemDate = moment()\n          .year(year)\n          .month(itemCount)\n          .endOf(\"month\")\n          .format(DEFAULT_DATE_FROMAT);\n        rowItemText = moment(currentItemDate, DEFAULT_DATE_FROMAT).format(\"MMM\");\n      }\n    } else if (type == \"quarterly\") {\n      if (!_.isNil(itemCount) && !_.isNil(year)) {\n        currentItemDate = moment()\n          .year(year)\n          .quarter(itemCount + 1)\n          .endOf(\"quarter\")\n          .format(DEFAULT_DATE_FROMAT);\n        rowItemText = `Quarter ${itemCount + 1}`;\n      }\n    }\n\n    firstLastDayObject = this.getFirstLastDay(currentItemDate, type);\n\n    variables.itemCount = itemCount;\n    variables.currentItemDate = currentItemDate;\n    variables.rowItemText = rowItemText;\n    variables.firstDay = firstLastDayObject.firstDay;\n    variables.lastDay = firstLastDayObject.lastDay;\n    return variables;\n  }\n\n  public isRowIemValid(options): boolean {\n    let valid = false;\n    const type = options.type;\n    const year = options.year;\n    const itemCount = options.itemCount;\n    const retailCalendar = options.retailCalendar;\n    const validWeekCount = this.getYearlyWeekCount(year, retailCalendar);\n\n    if (type == \"daily\") {\n      valid = true;\n    } else if (type == \"weekly\") {\n      if (itemCount < validWeekCount) {\n        valid = true;\n      }\n    } else if (type == \"monthly\") {\n      return true;\n    } else if (type == \"quarterly\") {\n      return true;\n    }\n\n    return valid;\n  }\n\n  public formatStartDate(config, returnFormat) {\n    const startDate = config ? config.startDate : null;\n    const type = config ? config.type : \"\";\n    let formattedStartDate = null;\n\n    if (startDate) {\n      formattedStartDate = moment(startDate, DEFAULT_DATE_FROMAT).format(returnFormat);\n      if (type == \"weekly\") {\n        formattedStartDate = moment(startDate, DEFAULT_DATE_FROMAT)\n          .startOf(\"week\")\n          .format(returnFormat);\n      } else if (type == \"monthly\") {\n        formattedStartDate = moment(startDate, DEFAULT_DATE_FROMAT)\n          .startOf(\"month\")\n          .format(returnFormat);\n      } else if (type == \"quarterly\") {\n        formattedStartDate = moment(startDate, DEFAULT_DATE_FROMAT)\n          .startOf(\"quarter\")\n          .format(returnFormat);\n      } else if (type == \"yearly\") {\n        formattedStartDate = moment(startDate, DEFAULT_DATE_FROMAT)\n          .startOf(\"year\")\n          .format(returnFormat);\n      }\n    }\n\n    return formattedStartDate;\n  }\n\n  public getSelectedYear(config, date, side): string {\n    return moment(date, DEFAULT_DATE_FROMAT).format(\"YYYY\");\n  }\n\n  public getFirstLastDay(date, type) {\n    let firstDay = \"\";\n    let lastDay = \"\";\n\n    if (type == \"daily\") {\n      firstDay = lastDay = date;\n    } else if (type == \"weekly\") {\n      firstDay = moment(date, DEFAULT_DATE_FROMAT)\n        .startOf(\"week\")\n        .format(DEFAULT_DATE_FROMAT);\n      lastDay = moment(date, DEFAULT_DATE_FROMAT)\n        .endOf(\"week\")\n        .format(DEFAULT_DATE_FROMAT);\n    } else if (type == \"monthly\") {\n      firstDay = moment(date, DEFAULT_DATE_FROMAT)\n        .startOf(\"month\")\n        .format(DEFAULT_DATE_FROMAT);\n      lastDay = moment(date, DEFAULT_DATE_FROMAT)\n        .endOf(\"month\")\n        .format(DEFAULT_DATE_FROMAT);\n    } else if (type == \"quarterly\") {\n      firstDay = moment(date, DEFAULT_DATE_FROMAT)\n        .startOf(\"quarter\")\n        .format(DEFAULT_DATE_FROMAT);\n      lastDay = moment(date, DEFAULT_DATE_FROMAT)\n        .endOf(\"quarter\")\n        .format(DEFAULT_DATE_FROMAT);\n    } else if (type == \"yearly\") {\n      firstDay = moment(date, DEFAULT_DATE_FROMAT)\n        .startOf(\"year\")\n        .format(DEFAULT_DATE_FROMAT);\n      lastDay = moment(date, DEFAULT_DATE_FROMAT)\n        .endOf(\"year\")\n        .format(DEFAULT_DATE_FROMAT);\n    }\n\n    return {\n      firstDay,\n      lastDay,\n    };\n  }\n\n  public getLocalTimezone() {\n    let tz = /\\((.*)\\)/.exec(new Date().toString())[1];\n\n    if (tz == \"Central Europe Standard Time\") {\n      tz = EU_TZ_CODE;\n    } else {\n      tz = DEFAULT_TIMEZONE_CODE;\n    }\n\n    return tz;\n  }\n\n  public getZoneDate(tz, format, date?) {\n    if (date) {\n      date = moment(date, format)\n        .startOf(\"day\")\n        .valueOf();\n    } else {\n      date = moment().valueOf();\n    }\n\n    let today = new Date(date).toLocaleString(\"en-US\", {\n      timeZone: TZ_NAMES[tz],\n    });\n    today = moment(today, \"MM/DD/YYYY, hh:mm:ss A\");\n    return today;\n  }\n\n  public getZoneToday(tz, viewDateFormat) {\n    const today = this.getZoneDate(tz, viewDateFormat);\n    return moment(today).format(`${viewDateFormat}  hh:mm A`);\n  }\n\n  public formatToZoneDate(tz, format, date) {\n    const formattedDate = this.getZoneDate(tz, format, date);\n    return moment(formattedDate).format(`${format}`);\n  }\n\n  public convertToViewTimeItem(item) {\n    let stringified_item = item + \"\";\n    if (stringified_item.length == 1) {\n      stringified_item = `0${stringified_item}`;\n    }\n    return stringified_item;\n  }\n\n  public getWeekNumber(date): any {\n    if (date) {\n      const year = moment(date, \"YYYY-MM-DD\").year();\n      const month = moment(date, \"YYYY-MM-DD\").month();\n      const day = Number(moment(date, \"YYYY-MM-DD\").format(\"D\"));\n\n      const yearStartms = new Date(year, 0, 1);\n      const datems = new Date(year, month, day);\n      return Math.ceil(((datems.getTime() - yearStartms.getTime()) / 86400000 + yearStartms.getDay() + 1) / 7);\n    } else {\n      console.warn(\"getWeekNumber: Invalid date\");\n      return this.getNotAvailableText();\n    }\n  }\n}\n","import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnChanges,\n  Output,\n  Renderer,\n  SimpleChanges,\n  ViewChild,\n  ViewEncapsulation,\n} from \"@angular/core\";\nimport { Observable } from \"rxjs\";\nimport { DateRangePickerConstants } from \"./dateTimeRangePicker.constants\";\nimport { DateTimeRangePickerUtilityService } from \"./dateTimeRangePicker.utility.service\";\nimport {\n  CalendarSides,\n  DateRangeModelItem,\n  DateTimeRangePickerOptions,\n  DateTimeRangePickerSettings,\n} from \"./interfaces/index\";\n\ndeclare var require: any;\nconst moment = require(\"moment\");\nconst _ = require(\"lodash\");\n\nenum InputFocusBlur {\n  focus = 1,\n  blur = 2,\n}\n\nconst DEFAULT_DATE_FROMAT = DateRangePickerConstants.DEFAULT.DATE_FROMAT;\nconst DEFAULT_TIME_FORMAT = DateRangePickerConstants.DEFAULT.TIME_FORMAT;\nconst DEFAULT_START_DATE = DateRangePickerConstants.DEFAULT.START_DATE;\nconst DEFAULT_END_DATE = DateRangePickerConstants.DEFAULT.END_DATE;\nconst DEFAULT_MIN_DATE = DateRangePickerConstants.DEFAULT.MIN_DATE;\nconst DEFAULT_MAX_DATE = DateRangePickerConstants.DEFAULT.MAX_DATE;\nconst DEFAULT_START_TIME = DateRangePickerConstants.DEFAULT.START_TIME;\nconst DEFAULT_END_TIME = DateRangePickerConstants.DEFAULT.END_TIME;\nconst TZ_CODES = DateRangePickerConstants.CONSTANT.TZ_CODES;\nconst USA_TZ_CODE = DateRangePickerConstants.CONSTANT.USA_TZ_CODE;\n\n@Component({\n  selector: \"b-date-range-picker\",\n  templateUrl: \"./dateTimeRangePicker.component.html\",\n  styleUrls: [\"./dateTimeRangePicker.component.scss\"],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class DateTimeRangePickerComponent implements OnChanges {\n  @Input() public options: DateTimeRangePickerOptions;\n  @Input() public settings: DateTimeRangePickerSettings;\n  @Input() public optionService: Observable<any>;\n  @Input() public dateRangeModel: Object;\n  @Input() public canBeEmpty = false;\n  @Output() public dateRangeModelChange: EventEmitter<Object> = new EventEmitter<Object>();\n  @Output() public dateRangeChanged: EventEmitter<DateRangeModelItem> = new EventEmitter<DateRangeModelItem>();\n  @Output() public inputFocusBlur: EventEmitter<Object> = new EventEmitter<Object>();\n  @Output() public selectedDate: EventEmitter<Object> = new EventEmitter<Object>();\n  @ViewChild(\"filterInputBox\") public filterInputBox: any;\n\n  public sides: string[] = [];\n  public dates: CalendarSides = {\n    left: {} as Object,\n    right: {} as Object,\n  };\n  public calendarAvailable: CalendarSides = {\n    left: false as boolean,\n    right: false as boolean,\n  };\n  public showCalendar = false;\n  public customRange = false;\n  public selectedDateText = \"\";\n  public dateTitleText: CalendarSides = {\n    left: \"\" as string,\n    right: \"\" as string,\n  };\n  public weekDayOptions: string[] = [\"su\", \"mo\", \"tu\", \"we\", \"th\", \"fr\", \"sa\"];\n  public selectedMonth: CalendarSides = {\n    left: \"\" as string,\n    right: \"\" as string,\n  };\n  public selectedYear: CalendarSides = {\n    left: \"\" as string,\n    right: \"\" as string,\n  };\n  public activeItem: CalendarSides = {\n    left: \"\" as string,\n    right: \"\" as string,\n  };\n  public activeStartDate: string = null;\n  public activeEndDate: string = null;\n  public activeRange: string = null;\n  public frequencyColumnHeader: string = null;\n\n  public config: any = {};\n\n  public isValidFilter = false;\n  public isUserModelChange = true;\n\n  public timezones: string[] = TZ_CODES;\n  public localTimezone: string = this.dateTimeRangePickerUtilityService.getLocalTimezone();\n  // Since 'useLocalTimezone: false' byDefault;\n  public selectedTimezone: string;\n  public todayTime = \"\";\n\n  public timeItems: string[] = [\"hour\", \"minute\"];\n  public times: CalendarSides = {\n    left: \"\" as string,\n    right: \"\" as string,\n  };\n  public selectedHour: CalendarSides = {\n    left: \"\" as string,\n    right: \"\" as string,\n  };\n  public selectedMinute: CalendarSides = {\n    left: \"\" as string,\n    right: \"\" as string,\n  };\n  public selectedMeridian: CalendarSides = {\n    left: \"\" as string,\n    right: \"\" as string,\n  };\n\n  constructor(\n    public element: ElementRef,\n    private renderer: Renderer,\n    private dateTimeRangePickerUtilityService: DateTimeRangePickerUtilityService,\n  ) {\n    this.options = this.dateTimeRangePickerUtilityService.getDefaultOptions();\n    this.settings = this.dateTimeRangePickerUtilityService.getDefaultSettings();\n    this.config = Object.assign(this.options, this.settings);\n\n    this.todayTime = this.dateTimeRangePickerUtilityService.getZoneToday(\n      this.selectedTimezone,\n      this.config.viewDateFormat,\n    );\n\n    this.renderer.listenGlobal(\"document\", \"click\", (event: any) => {\n      if (\n        this.showCalendar &&\n        event.target &&\n        event.target.className != \"mat-option-text\" &&\n        this.element.nativeElement !== event.target &&\n        !this.element.nativeElement.contains(event.target)\n      ) {\n        this.onCalendarClose(event);\n      }\n    });\n  }\n\n  public ngOnChanges(changes: SimpleChanges) {\n    this.isUserModelChange = true;\n\n    if (changes.canBeEmpty) {\n      this.canBeEmpty = changes.canBeEmpty.currentValue;\n    }\n\n    if (changes.settings) {\n      this.settings = _.merge(this.settings, changes.settings.currentValue);\n    }\n\n    if (changes.dateRangeModel) {\n      this.dateRangeModel = changes.dateRangeModel.currentValue;\n    }\n\n    // this.settings.selectedModel = (this.settings.selectedModel) ? this.settings.selectedModel : this.settings.type;\n\n    if (changes.dateRangeModel && !changes.dateRangeModel.firstChange) {\n      const previousValue = changes.dateRangeModel.previousValue[this.config.selectedModel];\n      const currentValue = changes.dateRangeModel.currentValue[this.config.selectedModel];\n      if (\n        previousValue &&\n        currentValue &&\n        previousValue.startDate == currentValue.startDate &&\n        previousValue.endDate == currentValue.endDate\n      ) {\n        this.isUserModelChange = false;\n      }\n    }\n\n    if (changes.optionService && changes.optionService.currentValue) {\n      changes.optionService.currentValue.subscribe(\n        (dateOptions: any) => {\n          if (_.isObject(dateOptions) && !_.isArray(dateOptions)) {\n            this.options = dateOptions.plain ? dateOptions.plain() : dateOptions;\n          }\n        },\n        (err) => {\n          console.error(\"DateRangePickerComponent | Filter Call Failure: \", err);\n        },\n        () => {\n          this.init();\n        },\n      );\n    }\n\n    if (changes.options) {\n      this.options = changes.options ? changes.options.currentValue : this.options;\n    }\n\n    if (!changes.optionService) {\n      this.init();\n    }\n  }\n\n  // Events\n  public onDateRangeInputChange(value: string) {\n    this.dateRangeSelected();\n  }\n\n  public setDisabledState(disabled: boolean): void {\n    this.config.componentDisabled = disabled;\n  }\n\n  public onComponentClick(): void {\n    this.showCalendar = !this.showCalendar;\n  }\n\n  public onFocusInput(event: any): void {\n    this.inputFocusBlur.emit({\n      reason: InputFocusBlur.focus,\n      value: event.target.value,\n    });\n  }\n\n  public onBlurInput(event: any): void {\n    this.selectedDateText = event.target.value;\n    this.inputFocusBlur.emit({\n      reason: InputFocusBlur.blur,\n      value: event.target.value,\n    });\n  }\n\n  public onCalendarClose(event: any): void {\n    if (this.config.startDate && this.config.endDate) {\n      this.filterInputBox.nativeElement.classList.remove(\"empty-filter\");\n      this.showCalendar = false;\n    } else {\n      // this.filterInputBox.nativeElement.classList.add('empty-filter');\n    }\n  }\n\n  public isPrevAvailale(month) {\n    const minDate = this.dateTimeRangePickerUtilityService.formatDateToDefaultFormat(\n      this.config.minDate,\n      DEFAULT_DATE_FROMAT,\n    );\n    const currentMonthStartDate = moment(month, \"MMM YYYY\")\n      .startOf(\"month\")\n      .valueOf();\n    if (\n      currentMonthStartDate >\n      moment(minDate, DEFAULT_DATE_FROMAT)\n        .startOf(\"month\")\n        .valueOf()\n    ) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  public isNextAvailale(month) {\n    const maxDate = this.dateTimeRangePickerUtilityService.formatDateToDefaultFormat(\n      this.config.maxDate,\n      DEFAULT_DATE_FROMAT,\n    );\n    const currentMonthEndDate = moment(month, \"MMM YYYY\")\n      .endOf(\"month\")\n      .valueOf();\n    if (\n      currentMonthEndDate <\n      moment(maxDate, DEFAULT_DATE_FROMAT)\n        .endOf(\"month\")\n        .valueOf()\n    ) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  public getCalendarColspan() {\n    if (this.config.type == \"daily\") {\n      return 6;\n    } else if (this.config.type == \"weekly\") {\n      return 8;\n    } else if (this.config.type == \"monthly\") {\n      return 3;\n    } else if (this.config.type == \"quarterly\") {\n      return 1;\n    } else if (this.config.type == \"yearly\") {\n      return 1;\n    }\n  }\n\n  public getCalendarRowItemColspan() {\n    if (this.config.type == \"monthly\") {\n      return 3;\n    } else if (this.config.type == \"quarterly\") {\n      return 6;\n    } else if (this.config.type == \"yearly\") {\n      return 6;\n    }\n  }\n\n  public getDatecharacteristics(date, month, side) {\n    const currentDate = moment(date, DEFAULT_DATE_FROMAT)\n      .startOf(\"day\")\n      .valueOf();\n    const minDate = moment(\n      this.dateTimeRangePickerUtilityService.formatDateToDefaultFormat(this.config.minDate, DEFAULT_DATE_FROMAT),\n      DEFAULT_DATE_FROMAT,\n    )\n      .startOf(\"day\")\n      .valueOf();\n    const maxDate = moment(\n      this.dateTimeRangePickerUtilityService.formatDateToDefaultFormat(this.config.maxDate, DEFAULT_DATE_FROMAT),\n      DEFAULT_DATE_FROMAT,\n    )\n      .startOf(\"day\")\n      .valueOf();\n    const startDate = moment(\n      this.dateTimeRangePickerUtilityService.formatDateToDefaultFormat(this.config.startDate, DEFAULT_DATE_FROMAT),\n      DEFAULT_DATE_FROMAT,\n    )\n      .startOf(\"day\")\n      .valueOf();\n    const endDate = moment(\n      this.dateTimeRangePickerUtilityService.formatDateToDefaultFormat(this.config.endDate, DEFAULT_DATE_FROMAT),\n      DEFAULT_DATE_FROMAT,\n    )\n      .startOf(\"day\")\n      .valueOf();\n    const currentMonthStartDate = moment(month, \"MMM YYYY\")\n      .startOf(\"month\")\n      .startOf(\"day\")\n      .valueOf();\n    const currentMonthEndDate = moment(month, \"MMM YYYY\")\n      .endOf(\"month\")\n      .startOf(\"day\")\n      .valueOf();\n\n    const available: boolean = this.dateTimeRangePickerUtilityService.isDateAvailable(\n      currentDate,\n      minDate,\n      maxDate,\n      startDate,\n      endDate,\n      currentMonthStartDate,\n      currentMonthEndDate,\n      this.config,\n    );\n    const inRange: boolean = this.dateTimeRangePickerUtilityService.isDateInRange(\n      currentDate,\n      minDate,\n      maxDate,\n      startDate,\n      endDate,\n      currentMonthStartDate,\n      currentMonthEndDate,\n      available,\n      this.config,\n    );\n    const active: boolean = this.dateTimeRangePickerUtilityService.isDateActive(currentDate, startDate, endDate, side);\n    const today: boolean = this.dateTimeRangePickerUtilityService.isDateToday(currentDate, this.config);\n\n    // Active\n    if (currentDate == startDate && side == \"left\") {\n      this.activeStartDate = date;\n    } else if (currentDate == endDate && side == \"right\") {\n      this.activeEndDate = date;\n    }\n\n    return {\n      available,\n      inRange,\n      active,\n      today,\n    };\n  }\n\n  public onClickPrevious(month, side) {\n    const startDate = moment(month, \"MMM YYYY\")\n      .subtract(1, \"month\")\n      .startOf(\"month\")\n      .format(DEFAULT_DATE_FROMAT);\n    this.dates[side] = this.generateCalendar(startDate, side);\n  }\n\n  public onClickNext(month, side) {\n    const endDate = moment(month, \"MMM YYYY\")\n      .add(1, \"month\")\n      .endOf(\"month\")\n      .format(DEFAULT_DATE_FROMAT);\n    this.dates[side] = this.generateCalendar(endDate, side);\n  }\n\n  public onCellClick(item, itemCell, side) {\n    const date = item.date ? moment(item.date, DEFAULT_DATE_FROMAT).valueOf() : item.date;\n    const startDate = this.config.startDate\n      ? moment(this.config.startDate, DEFAULT_DATE_FROMAT).valueOf()\n      : this.config.startDate;\n    const endDate = this.config.endDate\n      ? moment(this.config.endDate, DEFAULT_DATE_FROMAT).valueOf()\n      : this.config.endDate;\n    const minDate = this.config.minDate\n      ? moment(this.config.minDate, DEFAULT_DATE_FROMAT).valueOf()\n      : this.config.minDate;\n    const maxDate = this.config.maxDate\n      ? moment(this.config.maxDate, DEFAULT_DATE_FROMAT).valueOf()\n      : this.config.maxDate;\n\n    if (!item.available) {\n      if (date < minDate || date > maxDate) {\n        return;\n      }\n      this.dates[side] = this.generateCalendar(item.date, side);\n    }\n\n    if (endDate || date < startDate) {\n      this.config.endDate = null;\n      this.config.startDate = item.date;\n      this.activeItem.left = item;\n    } else if (!endDate && date < startDate) {\n      this.config.endDate = _.cloneDeep(this.config.startDate);\n      this.activeItem.right = item;\n    } else {\n      this.config.endDate = item.date;\n      this.activeItem.right = item;\n    }\n\n    if (this.config.singleDatePicker) {\n      this.config.endDate = _.cloneDeep(this.config.startDate);\n      this.activeItem.right = this.activeItem.left = item;\n    }\n\n    this.doApply();\n  }\n\n  public onCellMouseEnter(item, itemCell): void {\n    if (!item.available) {\n      return;\n    }\n\n    const date = item.date ? moment(item.date, DEFAULT_DATE_FROMAT).valueOf() : item.date;\n    const startDate = this.config.startDate\n      ? moment(this.config.startDate, DEFAULT_DATE_FROMAT).valueOf()\n      : this.config.startDate;\n    const endDate = this.config.endDate\n      ? moment(this.config.endDate, DEFAULT_DATE_FROMAT).valueOf()\n      : this.config.endDate;\n    let hoverItemFirstDate = itemCell ? itemCell.getAttribute(\"firstDay\") : \"\";\n    let hoverItemLastDate = itemCell ? itemCell.getAttribute(\"lastDay\") : \"\";\n    const hoverItemText = itemCell ? itemCell.innerText : \"\";\n    hoverItemFirstDate = moment(hoverItemFirstDate, DEFAULT_DATE_FROMAT).format(this.config.viewDateFormat);\n    hoverItemLastDate = moment(hoverItemLastDate, DEFAULT_DATE_FROMAT).format(this.config.viewDateFormat);\n\n    let activeItemInputFieldText = `${hoverItemText} (${hoverItemFirstDate} - ${hoverItemLastDate})`;\n\n    if (this.config.type == \"daily\") {\n      activeItemInputFieldText = `${hoverItemLastDate}`;\n    }\n\n    if (!endDate) {\n      _.forOwn(this.dates, (sideDates, side) => {\n        _.forEach(sideDates.itemRows, (rows) => {\n          _.forEach(rows.items, (item) => {\n            if (item.available) {\n              const hoverItemDate = item.date ? moment(item.date, DEFAULT_DATE_FROMAT).valueOf() : item.date;\n              if ((hoverItemDate > startDate && hoverItemDate < date) || date == hoverItemDate) {\n                item.inRange = true;\n                this.dateTitleText.right = activeItemInputFieldText;\n              }\n            }\n          });\n        });\n      });\n    } else {\n      if (this.config.singleDatePicker) {\n        this.dateTitleText.right = activeItemInputFieldText;\n      } else {\n        this.dateTitleText.left = activeItemInputFieldText;\n      }\n    }\n  }\n\n  public onCellMouseLeave(): void {\n    if (!this.config.endDate) {\n      _.forOwn(this.dates, (sideDates, side) => {\n        _.forEach(sideDates.itemRows, (rows) => {\n          _.forEach(rows.items, (item) => {\n            item.inRange = false;\n          });\n        });\n      });\n    } else {\n      this.updateActiveItemInputField();\n    }\n  }\n\n  public onRangeClick(rangeLabel, dateRangeModel: any) {\n    this.activeRange = rangeLabel;\n    if (rangeLabel == \"Custom Range\") {\n      this.customRange = !this.customRange;\n      if (this.customRange) {\n        this.updateCalendar();\n      } else {\n        this.sides.length = 0;\n        this.dates = {};\n        if (this.config.timePicker) {\n          this.times = {};\n        }\n      }\n    } else {\n      this.config.startDate = dateRangeModel.startDate;\n      this.config.endDate = dateRangeModel.endDate;\n      if (this.config.timePicker) {\n        // _.forEach(this.sides, (side) => {\n        //   this.times[side] = this.generateTimePicker(null, side);\n        // })\n        if (this.config.timePicker) {\n          this.times = {};\n        }\n        this.updateCalendar();\n      }\n      this.setActiveItemOnRangeClick();\n    }\n  }\n\n  public updateCalendar() {\n    this.sides.length = 0;\n    this.dates = {};\n    // takes 223 milliSeconds\n    // Order is important left - right\n    if (!this.config.singleDatePicker) {\n      this.sides.push(\"left\");\n      this.dates.left = this.generateCalendar(this.config.startDate, \"left\");\n      if (this.config.timePicker) {\n        this.times.left = this.generateTimePicker(this.config.startTime, \"left\");\n      }\n    }\n    this.sides.push(\"right\");\n    this.dates.right = this.generateCalendar(this.config.endDate, \"right\");\n    if (this.config.timePicker) {\n      this.times.right = this.generateTimePicker(this.config.endTime, \"right\");\n    }\n  }\n\n  public onCalendarLabelChange(label, side, type) {\n    this.showCalendar = true;\n    if (type == \"month\") {\n      this.selectedMonth[side] = label;\n    } else if (type == \"year\") {\n      this.selectedYear[side] = label;\n    }\n\n    if (this.config.type != \"daily\") {\n      this.selectedMonth[side] = \"Jun\";\n    }\n\n    if (this.config.type != \"yearly\") {\n      const selectedMonth = `${this.selectedMonth[side]} ${this.selectedYear[side]}`;\n      const date = moment(selectedMonth, \"MMM YYYY\")\n        .startOf(\"month\")\n        .format(DEFAULT_DATE_FROMAT);\n      this.dates[side] = this.generateCalendar(date, side);\n    } else {\n      if (this.selectedYear.left <= this.selectedYear.right && side == \"right\") {\n        this.config.startDate = moment(this.selectedYear.left, \"YYYY\")\n          .startOf(\"year\")\n          .format(DEFAULT_DATE_FROMAT);\n        this.config.endDate = moment(this.selectedYear.right, \"YYYY\")\n          .endOf(\"year\")\n          .format(DEFAULT_DATE_FROMAT);\n\n        this.doApply();\n      }\n      const config = {\n        startDate: moment(this.selectedYear.left, \"YYYY\")\n          .startOf(\"year\")\n          .format(DEFAULT_DATE_FROMAT),\n        type: \"yearly\",\n      };\n      const startDate = this.dateTimeRangePickerUtilityService.formatStartDate(config, this.config.viewDateFormat);\n      const endDate = this.config.endDate\n        ? moment(this.config.endDate, DEFAULT_DATE_FROMAT).format(this.config.viewDateFormat)\n        : \"\";\n      this.dateTitleText.left = `${startDate}`;\n      this.dateTitleText.right = `${endDate}`;\n    }\n  }\n\n  public onTimeLabelChange(timeItem, side, item) {\n    let time = null;\n    if (side == \"left\") {\n      time = this.config.startTime.split(\":\");\n      if (timeItem == \"hour\") {\n        this.config.startTime = `${item}:${time[1]}`;\n      } else {\n        this.config.startTime = `${time[0]}:${item}`;\n      }\n\n      const startDateEpoch = moment(this.config.startDate, DEFAULT_DATE_FROMAT).valueOf();\n      const endDateEpoch = moment(this.config.endDate, DEFAULT_DATE_FROMAT).valueOf();\n      if (startDateEpoch == endDateEpoch) {\n        this.times.right = this.generateTimePicker(this.config.startTime, \"right\");\n      }\n    } else {\n      time = this.config.endTime.split(\":\");\n      if (timeItem == \"hour\") {\n        this.config.endTime = `${item}:${time[1]}`;\n      } else {\n        this.config.endTime = `${time[0]}:${item}`;\n      }\n    }\n\n    if (timeItem == \"hour\") {\n      this.selectedHour[side] = this.dateTimeRangePickerUtilityService.convertToViewTimeItem(item);\n    } else {\n      this.selectedMinute[side] = this.dateTimeRangePickerUtilityService.convertToViewTimeItem(item);\n    }\n  }\n\n  public onTimeApply() {\n    this.dateRangeSelected();\n    this.updateInputField();\n  }\n\n  // Helpers\n  public init() {\n    if (this.isUserModelChange) {\n      this.isValidFilter = false;\n      this.config = Object.assign(\n        this.dateTimeRangePickerUtilityService.getDefaultOptions(),\n        this.dateTimeRangePickerUtilityService.getDefaultSettings(),\n      );\n      this.initialize();\n      this.parseOptions();\n      this.updateInputField();\n    }\n  }\n\n  public initialize() {\n    this.sides.length = 0;\n    this.dates = {};\n    this.calendarAvailable = {\n      left: false as boolean,\n      right: false as boolean,\n    };\n    this.showCalendar = false;\n    this.selectedDateText = \"\";\n    this.dateTitleText = {\n      left: \"\" as string,\n      right: \"\" as string,\n    };\n    this.weekDayOptions = [\"su\", \"mo\", \"tu\", \"we\", \"th\", \"fr\", \"sa\"];\n    this.selectedMonth = {\n      left: \"\" as string,\n      right: \"\" as string,\n    };\n    this.selectedYear = {\n      left: \"\" as string,\n      right: \"\" as string,\n    };\n    // this.activeItem = {\n    //   'left': <string> '',\n    //   'right': <string> ''\n    // };\n    this.times = {\n      left: \"\" as string,\n      right: \"\" as string,\n    };\n    this.activeStartDate = null;\n    this.activeEndDate = null;\n    this.frequencyColumnHeader = null;\n    this.customRange = false;\n    this.activeRange = \"\";\n  }\n\n  public parseOptions(): void {\n    if (this.options !== undefined) {\n      Object.keys(this.options).forEach((k) => {\n        this.config[k] = this.options[k];\n      });\n    }\n    if (this.settings !== undefined) {\n      Object.keys(this.settings).forEach((k) => {\n        this.config[k] = this.settings[k];\n      });\n    }\n\n    this.config.selectedModel = this.config.selectedModel ? this.config.selectedModel : this.config.type;\n\n    if (this.config.type == \"weekly\" || this.config.type == \"yearly\") {\n      this.config.showRowNumber = false;\n    }\n    if (this.config.singleDatePicker) {\n      this.config.startDate = _.cloneDeep(this.config.endDate);\n    }\n\n    this.selectTimeZone();\n    this.parseOptionsToDefaultDateFormat();\n    this.processDateRangeModel();\n    this.handleDateArray();\n    this.sanitizeDates();\n    this.processRanges();\n    this.doDateRangeModelChange();\n    // this.config.selectedModel = undefined;\n  }\n\n  public selectTimeZone() {\n    if (this.config.timezoneSupport) {\n      if (!this.config.defaultTimezone) {\n        this.config.defaultTimezone = USA_TZ_CODE;\n      }\n      this.selectedTimezone = this.config.defaultTimezone;\n    }\n\n    if (this.config.useLocalTimezone) {\n      this.selectedTimezone = this.localTimezone;\n    }\n    this.onTimezoneChange(this.selectedTimezone);\n  }\n\n  public parseOptionsToDefaultDateFormat() {\n    this.config.minDate = this.config.minDate\n      ? this.dateTimeRangePickerUtilityService.formatDateToDefaultFormat(\n          this.config.minDate,\n          this.config.inputDateFormat,\n        )\n      : DEFAULT_MIN_DATE;\n    this.config.maxDate = this.config.maxDate\n      ? this.dateTimeRangePickerUtilityService.formatDateToDefaultFormat(\n          this.config.maxDate,\n          this.config.inputDateFormat,\n        )\n      : DEFAULT_MAX_DATE;\n    this.config.startDate = this.config.startDate\n      ? this.dateTimeRangePickerUtilityService.formatDateToDefaultFormat(\n          this.config.startDate,\n          this.config.inputDateFormat,\n        )\n      : DEFAULT_START_DATE;\n    this.config.endDate = this.config.endDate\n      ? this.dateTimeRangePickerUtilityService.formatDateToDefaultFormat(\n          this.config.endDate,\n          this.config.inputDateFormat,\n        )\n      : DEFAULT_END_DATE;\n\n    if (this.config.timePicker) {\n      this.config.minTime = this.config.minTime\n        ? this.dateTimeRangePickerUtilityService.formatTimeToDefaultFormat(this.config.minTime)\n        : DEFAULT_START_TIME;\n      this.config.maxTime = this.config.maxTime\n        ? this.dateTimeRangePickerUtilityService.formatTimeToDefaultFormat(this.config.maxTime)\n        : DEFAULT_END_TIME;\n      this.config.startTime = this.config.startTime\n        ? this.dateTimeRangePickerUtilityService.formatTimeToDefaultFormat(this.config.startTime)\n        : DEFAULT_START_TIME;\n      this.config.endTime = this.config.endTime\n        ? this.dateTimeRangePickerUtilityService.formatTimeToDefaultFormat(this.config.endTime)\n        : DEFAULT_END_TIME;\n    }\n  }\n\n  /**\n   * @desc sets startDate, endDate\n   */\n  public processDateRangeModel() {\n    if (undefined != this.dateRangeModel && !_.isEmpty(this.dateRangeModel)) {\n      if (this.dateRangeModel[this.config.selectedModel]) {\n        const dateRangeMinDate = this.dateRangeModel[this.config.selectedModel].minDate;\n        const dateRangeMaxDate = this.dateRangeModel[this.config.selectedModel].maxDate;\n        const dateRangeStartDate = this.dateRangeModel[this.config.selectedModel].startDate;\n        const dateRangeEndDate = this.dateRangeModel[this.config.selectedModel].endDate;\n        const dateRangeDateArray = this.dateRangeModel[this.config.selectedModel].dateArray;\n\n        this.config.dateArray = dateRangeDateArray ? dateRangeDateArray : this.config.dateArray;\n        this.config.minDate = dateRangeMinDate\n          ? this.dateTimeRangePickerUtilityService.formatDateToDefaultFormat(\n              dateRangeMinDate,\n              this.config.inputDateFormat,\n            )\n          : this.config.minDate;\n        this.config.maxDate = dateRangeMaxDate\n          ? this.dateTimeRangePickerUtilityService.formatDateToDefaultFormat(\n              dateRangeMaxDate,\n              this.config.inputDateFormat,\n            )\n          : this.config.maxDate;\n        this.config.startDate = dateRangeStartDate\n          ? this.dateTimeRangePickerUtilityService.formatDateToDefaultFormat(\n              dateRangeStartDate,\n              this.config.inputDateFormat,\n            )\n          : this.config.startDate;\n        this.config.endDate = dateRangeEndDate\n          ? this.dateTimeRangePickerUtilityService.formatDateToDefaultFormat(\n              dateRangeEndDate,\n              this.config.inputDateFormat,\n            )\n          : this.config.endDate;\n\n        if (this.config.timePicker) {\n          const dateRangeMinTime = this.dateRangeModel[this.config.selectedModel].minTime;\n          const dateRangeMaxTime = this.dateRangeModel[this.config.selectedModel].maxTime;\n          const dateRangeStartTime = this.dateRangeModel[this.config.selectedModel].startTime;\n          const dateRangeEndTime = this.dateRangeModel[this.config.selectedModel].endTime;\n          this.config.minTime = this.config.minTime\n            ? this.dateTimeRangePickerUtilityService.formatTimeToDefaultFormat(dateRangeMinTime)\n            : this.config.minTime;\n          this.config.maxTime = this.config.maxTime\n            ? this.dateTimeRangePickerUtilityService.formatTimeToDefaultFormat(dateRangeMaxTime)\n            : this.config.maxTime;\n          this.config.startTime = this.config.startTime\n            ? this.dateTimeRangePickerUtilityService.formatTimeToDefaultFormat(dateRangeStartTime)\n            : this.config.startTime;\n          this.config.endTime = this.config.endTime\n            ? this.dateTimeRangePickerUtilityService.formatTimeToDefaultFormat(dateRangeEndTime)\n            : this.config.endTime;\n        }\n      }\n    }\n  }\n\n  /**\n   * @desc sets minDate, maxDate, startDate, endDate if not passed\n   */\n  public handleDateArray() {\n    if (this.config.dateArray && this.config.dateArray.length > 0) {\n      this.config.dateArray = this.dateTimeRangePickerUtilityService.getSanitizedDateArray(this.config);\n\n      // sort in asc order\n      this.config.dateArray = _.sortBy(this.config.dateArray, (date) => {\n        let format = null;\n        if (isNaN(Number(date))) {\n          if (this.config.inputDateFormat) {\n            format = this.config.inputDateFormat;\n          } else {\n            format = moment(date)._f;\n          }\n        }\n        const value = moment(date, format).valueOf();\n        if (!isNaN(value)) {\n          return value;\n        } else {\n          console.warn(\n            \"M1 Date Range Picker: Values in Date Array are not in any known format. Please pass the format or pass the dates in any known format\",\n          );\n        }\n      });\n\n      const minDate = this.config.dateArray[0];\n      const maxDate = this.config.dateArray[this.config.dateArray.length - 1];\n\n      if (\n        moment(this.config.minDate, DEFAULT_DATE_FROMAT).valueOf() ==\n        moment(DEFAULT_MIN_DATE, DEFAULT_DATE_FROMAT).valueOf()\n      ) {\n        this.config.minDate = this.dateTimeRangePickerUtilityService.formatDateToDefaultFormat(\n          minDate,\n          this.config.inputDateFormat,\n        );\n      }\n      if (\n        moment(this.config.maxDate, DEFAULT_DATE_FROMAT).valueOf() ==\n        moment(DEFAULT_MAX_DATE, DEFAULT_DATE_FROMAT).valueOf()\n      ) {\n        this.config.maxDate = this.dateTimeRangePickerUtilityService.formatDateToDefaultFormat(\n          maxDate,\n          this.config.inputDateFormat,\n        );\n      }\n      if (\n        moment(this.config.startDate, DEFAULT_DATE_FROMAT).valueOf() ==\n        moment(DEFAULT_START_DATE, DEFAULT_DATE_FROMAT).valueOf()\n      ) {\n        this.config.startDate = this.dateTimeRangePickerUtilityService.formatDateToDefaultFormat(\n          minDate,\n          this.config.inputDateFormat,\n        );\n      }\n      if (\n        moment(this.config.endDate, DEFAULT_DATE_FROMAT).valueOf() ==\n        moment(DEFAULT_END_DATE, DEFAULT_DATE_FROMAT).valueOf()\n      ) {\n        this.config.endDate = this.dateTimeRangePickerUtilityService.formatDateToDefaultFormat(\n          maxDate,\n          this.config.inputDateFormat,\n        );\n      }\n    }\n  }\n\n  public sanitizeDates() {\n    const subtractWeekCount = 0;\n    if (this.config.type == \"monthly\") {\n      this.config.minDate = moment(this.config.minDate, DEFAULT_DATE_FROMAT)\n        .endOf(\"month\")\n        .format(DEFAULT_DATE_FROMAT);\n      this.config.maxDate = moment(this.config.maxDate, DEFAULT_DATE_FROMAT)\n        .subtract(subtractWeekCount, \"week\")\n        .endOf(\"month\")\n        .format(DEFAULT_DATE_FROMAT);\n      this.config.startDate = moment(this.config.startDate, DEFAULT_DATE_FROMAT)\n        .endOf(\"month\")\n        .format(DEFAULT_DATE_FROMAT);\n      this.config.endDate = moment(this.config.endDate, DEFAULT_DATE_FROMAT)\n        .subtract(subtractWeekCount, \"week\")\n        .endOf(\"month\")\n        .format(DEFAULT_DATE_FROMAT);\n    } else if (this.config.type == \"quarterly\") {\n      this.config.minDate = moment(this.config.minDate, DEFAULT_DATE_FROMAT)\n        .endOf(\"quarter\")\n        .format(DEFAULT_DATE_FROMAT);\n      this.config.maxDate = moment(this.config.maxDate, DEFAULT_DATE_FROMAT)\n        .subtract(subtractWeekCount, \"week\")\n        .endOf(\"quarter\")\n        .format(DEFAULT_DATE_FROMAT);\n      this.config.startDate = moment(this.config.startDate, DEFAULT_DATE_FROMAT)\n        .endOf(\"quarter\")\n        .format(DEFAULT_DATE_FROMAT);\n      this.config.endDate = moment(this.config.endDate, DEFAULT_DATE_FROMAT)\n        .subtract(subtractWeekCount, \"week\")\n        .endOf(\"quarter\")\n        .format(DEFAULT_DATE_FROMAT);\n    }\n\n    if (this.config.type == \"weekly\") {\n      this.config.minDate = moment(this.config.minDate, DEFAULT_DATE_FROMAT)\n        .endOf(\"week\")\n        .format(DEFAULT_DATE_FROMAT);\n      this.config.maxDate = moment(this.config.maxDate, DEFAULT_DATE_FROMAT)\n        .endOf(\"week\")\n        .format(DEFAULT_DATE_FROMAT);\n      this.config.startDate = moment(this.config.startDate, DEFAULT_DATE_FROMAT)\n        .endOf(\"week\")\n        .format(DEFAULT_DATE_FROMAT);\n      this.config.endDate = moment(this.config.endDate, DEFAULT_DATE_FROMAT)\n        .endOf(\"week\")\n        .format(DEFAULT_DATE_FROMAT);\n\n      if (this.config.type == \"yearly\") {\n        const minDate = moment(this.config.minDate, DEFAULT_DATE_FROMAT).format(DEFAULT_DATE_FROMAT);\n        const startDate = moment(this.config.startDate, DEFAULT_DATE_FROMAT).format(DEFAULT_DATE_FROMAT);\n        this.config.minDate = minDate;\n        this.config.startDate = startDate;\n      }\n    }\n\n    if (\n      moment(this.config.startDate, DEFAULT_DATE_FROMAT).valueOf() <\n      moment(this.config.minDate, DEFAULT_DATE_FROMAT).valueOf()\n    ) {\n      this.config.minDate = this.config.startDate;\n    }\n\n    if (\n      moment(this.config.endDate, DEFAULT_DATE_FROMAT).valueOf() >\n      moment(this.config.maxDate, DEFAULT_DATE_FROMAT).valueOf()\n    ) {\n      this.config.maxDate = this.config.endDate;\n    }\n  }\n\n  public processRanges() {\n    if (this.config.showRanges && !this.config.singleDatePicker) {\n      if (_.isEmpty(this.config.availableRanges)) {\n        this.config.availableRanges = this.dateTimeRangePickerUtilityService.createDefaultRanges(this.config);\n      }\n      this.selectActiveRange();\n    } else {\n      this.activeRange = \"Custom Range\";\n      this.onRangeClick(this.activeRange, null);\n    }\n  }\n\n  public selectActiveRange() {\n    _.forOwn(this.config.availableRanges, (rangeModel, range) => {\n      if (this.config.startDate == rangeModel.startDate && this.config.endDate == rangeModel.endDate) {\n        this.activeRange = range;\n        this.updateActiveItem();\n      }\n    });\n\n    if (!this.activeRange) {\n      this.activeRange = \"Custom Range\";\n      this.onRangeClick(this.activeRange, null);\n    }\n  }\n\n  public generateCalendar(date, side) {\n    this.selectedMonth[side] = moment(date, DEFAULT_DATE_FROMAT).format(\"MMM\");\n    this.selectedYear[side] = this.dateTimeRangePickerUtilityService.getSelectedYear(this.config, date, side);\n    const calendarLabel = `${this.selectedMonth[side]} ${this.selectedYear[side]}`;\n\n    const dates = {\n      label: calendarLabel as string,\n      months: this.dateTimeRangePickerUtilityService.getMonthsAvailable(\n        this.config.minDate,\n        this.config.maxDate,\n        this.selectedYear[side],\n      ),\n      years: this.dateTimeRangePickerUtilityService.getYearsAvailable(this.config),\n      itemRows: [] as Object[],\n    };\n\n    this.weekDayOptions = [\"\"];\n\n    if (this.config.type != \"yearly\") {\n      // moment returns wrong week number\n      const monthStartWeekNumber: number = moment(date, DEFAULT_DATE_FROMAT)\n        .year(this.selectedYear[side])\n        .startOf(\"month\")\n        .week(); // previousMonthLastWeek\n      const yearStartDate = moment(this.selectedYear[side], \"YYYY\")\n        .startOf(\"year\")\n        .format(DEFAULT_DATE_FROMAT);\n      let numberOfRows = 1;\n      let rowNumber: any = 0;\n      let columns: any = 0;\n      let currentItemDate = \"\";\n      let datecharacteristics: any = {};\n      let rowItemText = \"\";\n      let rowVariables: any = {};\n      let rowItemVariables: any = {};\n      let firstDay = \"\";\n      let lastDay = \"\";\n\n      if (this.config.type == \"daily\") {\n        numberOfRows = this.dateTimeRangePickerUtilityService.getNumberOfWeeks(date);\n        this.weekDayOptions = [\"su\", \"mo\", \"tu\", \"we\", \"th\", \"fr\", \"sa\"];\n      } else if (this.config.type == \"weekly\") {\n        numberOfRows = 8;\n        this.weekDayOptions = [\"\", \"\", \"\", \"\", \"\", \"\", \"\"];\n      } else if (this.config.type == \"monthly\") {\n        numberOfRows = 4;\n        this.weekDayOptions = [\"\", \"\", \"\"];\n      } else if (this.config.type == \"quarterly\") {\n        numberOfRows = 4;\n        this.weekDayOptions = [\"\"];\n      }\n\n      for (let dateRows = 0; dateRows < numberOfRows; dateRows++) {\n        const dateRowObj = {\n          rowNumber: null as string,\n          rowNumberText: null as string,\n          items: [] as Object[],\n        };\n\n        const rowOptions: any = {};\n        rowOptions.type = this.config.type;\n        rowOptions.monthStartWeekNumber = monthStartWeekNumber;\n        rowOptions.dateRows = dateRows;\n        rowOptions.year = this.selectedYear[side];\n        rowVariables = this.dateTimeRangePickerUtilityService.getCalendarRowVariables(rowOptions);\n\n        rowNumber = rowVariables.rowNumber;\n        columns = rowVariables.columns;\n\n        dateRowObj.rowNumber = rowNumber;\n        dateRowObj.rowNumberText = this.dateTimeRangePickerUtilityService.getCalendarRowNumberText(\n          this.config.type,\n          rowNumber,\n        );\n\n        for (let rowItem = 0; rowItem <= columns; rowItem++) {\n          const rowItemOptions: any = {};\n          rowItemOptions.type = this.config.type;\n          rowItemOptions.monthStartWeekNumber = monthStartWeekNumber;\n          rowItemOptions.dateRows = dateRows;\n          rowItemOptions.rowNumber = rowNumber;\n          rowItemOptions.yearStartDate = yearStartDate;\n          rowItemOptions.year = this.selectedYear[side];\n          rowItemOptions.rowItem = rowItem;\n          rowItemOptions.columns = columns;\n          rowItemOptions.year = this.selectedYear[side];\n          rowItemVariables = this.dateTimeRangePickerUtilityService.getCalendarRowItemVariables(rowItemOptions);\n\n          currentItemDate = rowItemVariables.currentItemDate;\n          rowItemText = rowItemVariables.rowItemText;\n          firstDay = rowItemVariables.firstDay;\n          lastDay = rowItemVariables.lastDay;\n          rowOptions.itemCount = rowItemVariables.itemCount;\n          datecharacteristics = this.getDatecharacteristics(currentItemDate, calendarLabel, side);\n\n          const itemObj = {\n            date: currentItemDate,\n            rowItemText,\n            firstDay,\n            lastDay,\n            available: datecharacteristics.available,\n            inRange: datecharacteristics.inRange,\n            active: datecharacteristics.active,\n            today: datecharacteristics.today,\n          };\n          if (this.dateTimeRangePickerUtilityService.isRowIemValid(rowOptions)) {\n            if (datecharacteristics.active) {\n              this.activeItem[side] = itemObj;\n            }\n            dateRowObj.items.push(itemObj);\n          }\n        }\n        dates.itemRows.push(dateRowObj);\n      }\n    }\n\n    this.calendarAvailable[side] = true;\n    return dates;\n  }\n\n  public generateTimePicker(time, side) {\n    const timeObject = {\n      hour: [],\n      minute: [],\n      meridian: [],\n    };\n\n    let startHour = 0;\n    const endHour = 23;\n    let startMinute = 0;\n    const endMinute = 59;\n    let selectedHour = side == \"left\" ? startHour : endHour;\n    let selectedMinute = side == \"left\" ? startMinute : endMinute;\n    const startDateEpoch = moment(this.config.startDate, DEFAULT_DATE_FROMAT).valueOf();\n    const endDateEpoch = moment(this.config.endDate, DEFAULT_DATE_FROMAT).valueOf();\n\n    if (time) {\n      selectedHour = moment(time, DEFAULT_TIME_FORMAT).format(\"H\");\n      selectedMinute = moment(time, DEFAULT_TIME_FORMAT).format(\"m\");\n\n      if (side == \"right\" && startDateEpoch == endDateEpoch) {\n        startHour = selectedHour;\n        startMinute = selectedMinute;\n      }\n    }\n\n    // let dateOptions = {\n    //   timeZone: TZ_NAMES[this.selectedTimezone],\n    //   timeZoneName: 'short',\n    //   hour12: false\n    // }\n    // let startDateObj = new Date(`Jan 1 1970 ${startHour}:${startMinute}:00 GMT-0700 (Mountain Standard Time)`);\n    // let endDateObj = new Date(`Jan 1 1970 ${endHour}:${endMinute}:00 GMT-0700 (Mountain Standard Time)`);\n    // startTime = startDateObj.toLocaleTimeString('en-US', dateOptions);\n    // endTime = endDateObj.toLocaleTimeString('en-US', dateOptions);\n\n    // startHour = moment(startTime, 'HH:mm:ss').format('H');\n    // endHour = moment(endTime, 'HH:mm:ss').format('H');\n    // startMinute = moment(startTime, 'HH:mm:ss').format('m');\n    // endMinute = moment(endTime, 'HH:mm:ss').format('m');\n\n    for (let h = startHour; h <= 23; h++) {\n      const stringified_h = this.dateTimeRangePickerUtilityService.convertToViewTimeItem(h);\n      timeObject.hour.push(stringified_h);\n    }\n    for (let m = startMinute; m <= 59; m++) {\n      const stringified_m = this.dateTimeRangePickerUtilityService.convertToViewTimeItem(m);\n      timeObject.minute.push(stringified_m);\n    }\n\n    this.selectedHour[side] = this.dateTimeRangePickerUtilityService.convertToViewTimeItem(selectedHour);\n    this.selectedMinute[side] = this.dateTimeRangePickerUtilityService.convertToViewTimeItem(selectedMinute);\n\n    if (side == \"left\") {\n      this.config.startTime = `${this.selectedHour[side]}:${this.selectedMinute[side]}`;\n    } else if (side == \"right\") {\n      this.config.endTime = `${this.selectedHour[side]}:${this.selectedMinute[side]}`;\n    }\n\n    return timeObject;\n  }\n\n  public capitalize(day) {\n    return _.capitalize(day);\n  }\n\n  public updateInputField() {\n    const startDate = this.dateTimeRangePickerUtilityService.formatStartDate(this.config, this.config.viewDateFormat);\n    const endDate = this.config.endDate\n      ? moment(this.config.endDate, DEFAULT_DATE_FROMAT).format(this.config.viewDateFormat)\n      : \"\";\n\n    if (this.config.singleDatePicker) {\n      let startDateText = startDate;\n      let endDataText = endDate;\n      let dateText = \"\";\n\n      if (this.config.timePicker) {\n        startDateText = `${startDate} ${this.config.startTime}`;\n        endDataText = `${endDate} ${this.config.endTime}`;\n      }\n      if (this.config.displayBeginDate) {\n        dateText = `${startDateText}`;\n      } else if (this.config.displayEndDate) {\n        dateText = `${endDataText}`;\n      } else {\n        dateText = `${startDateText} - ${endDataText}`;\n      }\n\n      this.selectedDateText = dateText;\n    } else {\n      let startDateText = startDate;\n      let endDataText = endDate;\n\n      if (this.config.timePicker) {\n        startDateText = `${startDate} ${this.config.startTime}`;\n        endDataText = `${endDate} ${this.config.endTime}`;\n      }\n\n      this.selectedDateText = `${startDateText} - ${endDataText}`;\n    }\n\n    if (this.canBeEmpty || this.selectedDateText.indexOf(\"nvalid\") < 0) {\n      this.isValidFilter = true;\n    }\n\n    if (this.config.type == \"yearly\") {\n      this.dateTitleText.left = `${startDate}`;\n      this.dateTitleText.right = `${endDate}`;\n    } else {\n      this.updateActiveItemInputField();\n    }\n  }\n\n  public updateActiveItemInputField() {\n    let itemFirstDate = \"\";\n    let itemLastDate = \"\";\n    let itemText = \"\";\n    if (!this.config.singleDatePicker) {\n      itemFirstDate = this.activeItem.left.firstDay;\n      itemLastDate = this.activeItem.left.lastDay;\n      itemText = this.activeItem.left.rowItemText;\n      itemFirstDate = moment(itemFirstDate, DEFAULT_DATE_FROMAT).format(this.config.viewDateFormat);\n      itemLastDate = moment(itemLastDate, DEFAULT_DATE_FROMAT).format(this.config.viewDateFormat);\n      if (this.config.type != \"daily\") {\n        this.dateTitleText.left = `${itemText} (${itemFirstDate} - ${itemLastDate})`;\n      } else {\n        this.dateTitleText.left = `${itemFirstDate}`;\n      }\n    }\n\n    itemFirstDate = this.activeItem.right.firstDay;\n    itemLastDate = this.activeItem.right.lastDay;\n    itemText = this.activeItem.right.rowItemText;\n    itemFirstDate = moment(itemFirstDate, DEFAULT_DATE_FROMAT).format(this.config.viewDateFormat);\n    itemLastDate = moment(itemLastDate, DEFAULT_DATE_FROMAT).format(this.config.viewDateFormat);\n    if (this.config.type != \"daily\") {\n      this.dateTitleText.right = `${itemText} (${itemFirstDate} - ${itemLastDate})`;\n    } else {\n      this.dateTitleText.right = `${itemFirstDate}`;\n    }\n  }\n\n  public dateRangeSelected() {\n    const dateRangeModel: DateRangeModelItem = this.getDateRangeModelItem();\n    this.showCalendar = false;\n    this.filterInputBox.nativeElement.classList.remove(\"empty-filter\");\n    this.doDateRangeModelChange();\n    this.dateRangeChanged.emit(dateRangeModel);\n  }\n\n  public getDateRangeModel(format?) {\n    let dRModel = {};\n    if (undefined != this.dateRangeModel && !_.isEmpty(this.dateRangeModel)) {\n      dRModel = _.cloneDeep(this.dateRangeModel);\n    }\n    dRModel[this.config.selectedModel] = this.getDateRangeModelItem(format);\n    return dRModel;\n  }\n\n  public getDateRangeModelItem(format?): DateRangeModelItem {\n    let dateRangeModelItem: DateRangeModelItem;\n    let outputDateFormat = this.config.outputDateFormat;\n    if (undefined != format) {\n      outputDateFormat = format;\n    }\n    let startDate = this.dateTimeRangePickerUtilityService.formatStartDate(this.config, outputDateFormat);\n    let endDate = moment(this.config.endDate, DEFAULT_DATE_FROMAT).format(outputDateFormat);\n\n    if (this.config.selectedTimezone) {\n      startDate = this.dateTimeRangePickerUtilityService.formatToZoneDate(\n        this.config.selectedTimezone,\n        outputDateFormat,\n        startDate,\n      );\n      endDate = this.dateTimeRangePickerUtilityService.formatToZoneDate(\n        this.config.selectedTimezone,\n        outputDateFormat,\n        endDate,\n      );\n    }\n\n    dateRangeModelItem = { startDate, endDate };\n\n    if (this.config.timePicker) {\n      const startTime = this.config.startTime;\n      const endTime = this.config.endTime;\n\n      dateRangeModelItem = {\n        startDate,\n        endDate,\n        startTime,\n        endTime,\n      };\n    }\n\n    return dateRangeModelItem;\n  }\n\n  public doApply() {\n    const startDate = this.config.startDate;\n    const endDate = this.config.endDate;\n\n    this.activeStartDate = startDate as string;\n    this.activeEndDate = endDate as string;\n\n    if (this.config.startDate && this.config.endDate) {\n      if (!this.config.timePicker) {\n        this.dateRangeSelected();\n      } else {\n        if (this.config.timePicker) {\n          _.forEach(this.sides, (side) => {\n            this.times[side] = this.generateTimePicker(null, side);\n          });\n        }\n      }\n    }\n\n    let outputStartDate = startDate ? moment(startDate, DEFAULT_DATE_FROMAT).valueOf() : null;\n    let outputEndDate = endDate ? moment(endDate, DEFAULT_DATE_FROMAT).valueOf() : null;\n    if (this.config.outputDateFormat) {\n      outputStartDate = startDate ? moment(startDate, DEFAULT_DATE_FROMAT).format(this.config.outputDateFormat) : null;\n      outputEndDate = endDate ? moment(endDate, DEFAULT_DATE_FROMAT).format(this.config.outputDateFormat) : null;\n    }\n    this.selectedDate.emit({\n      startDate: outputStartDate,\n      endDate: outputEndDate,\n    });\n\n    this.updateInputField();\n  }\n\n  public doDateRangeModelChange() {\n    const dateRangeModel = this.getDateRangeModel(this.config.inputDateFormat);\n    this.dateRangeModelChange.emit(dateRangeModel);\n  }\n\n  public onTimezoneChange(tz) {\n    this.selectedTimezone = tz;\n    this.todayTime = this.dateTimeRangePickerUtilityService.getZoneToday(\n      this.selectedTimezone,\n      this.config.viewDateFormat,\n    );\n\n    this.parseOptionsToDefaultDateFormat();\n    _.forEach(this.sides, (side) => {\n      let date = this.config.startDate;\n      let time = this.config.startTime;\n      if (side == \"right\") {\n        date = this.config.endDate;\n        time = this.config.endTime;\n      }\n      this.dates[side] = this.generateCalendar(date, side);\n      if (this.config.timePicker) {\n        this.times[side] = this.generateTimePicker(time, side);\n      }\n    });\n  }\n\n  public getSelectedTimeItemText(item, side) {\n    if (item == \"hour\") {\n      return this.selectedHour[side];\n    } else if (item == \"minute\") {\n      return this.selectedMinute[side];\n    }\n  }\n\n  public setActiveItemOnRangeClick() {\n    this.updateActiveItem();\n    this.doApply();\n  }\n\n  public updateActiveItem() {\n    const startDate: any = this.dateTimeRangePickerUtilityService.getFirstLastDay(\n      this.config.startDate,\n      this.config.type,\n    );\n    const endDate: any = this.dateTimeRangePickerUtilityService.getFirstLastDay(this.config.endDate, this.config.type);\n\n    if (this.config.type == \"weekly\") {\n      startDate.rowItemText = `W${this.dateTimeRangePickerUtilityService.getWeekNumber(startDate.firstDay)}`;\n      endDate.rowItemText = `W${this.dateTimeRangePickerUtilityService.getWeekNumber(endDate.firstDay)}`;\n    } else if (this.config.type == \"monthly\") {\n      startDate.rowItemText = `${moment(startDate.firstDay, DEFAULT_DATE_FROMAT).format(\"MMM\")}`;\n      endDate.rowItemText = `${moment(endDate.firstDay, DEFAULT_DATE_FROMAT).format(\"MMM\")}`;\n    } else if (this.config.type == \"quarterly\") {\n      startDate.rowItemText = `Quarter ${moment(startDate.firstDay, DEFAULT_DATE_FROMAT).quarter()}`;\n      endDate.rowItemText = `Quarter ${moment(endDate.firstDay, DEFAULT_DATE_FROMAT).quarter()}`;\n    }\n\n    this.activeItem.left = startDate;\n    this.activeItem.right = endDate;\n\n    // this.doApply();\n  }\n}\n","import { ModuleWithProviders, NgModule } from \"@angular/core\";\nimport { FormsModule } from \"@angular/forms\";\nimport { MatButtonModule, MatFormFieldModule, MatIconModule, MatInputModule, MatSelectModule } from \"@angular/material\";\nimport { BrowserModule } from \"@angular/platform-browser\";\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\n\nimport { ObjNgFor } from \"../pipes/objNgFor.pipe\";\n\nimport { DateTimeRangePickerComponent } from \"./dateTimeRangePicker.component\";\nimport { DateTimeRangePickerUtilityService } from \"./dateTimeRangePicker.utility.service\";\n\nconst declarations = [ObjNgFor, DateTimeRangePickerComponent];\n\n@NgModule({\n  declarations,\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    MatFormFieldModule,\n    MatButtonModule,\n    MatInputModule,\n    MatIconModule,\n    MatSelectModule,\n  ],\n  exports: [DateTimeRangePickerComponent],\n})\nexport class NgxDateTimeRangePickerModule {\n  public static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: NgxDateTimeRangePickerModule,\n      providers: [DateTimeRangePickerUtilityService],\n    };\n  }\n}\n"]}