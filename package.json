{
  "name": "ngx-datetime-range-picker",
  "description": "Date time range picker for daily, weekly, monthly, quarterly & yearly levels",
  "version": "1.0.7",
  "homepage": "https://github.com/BhavinPatel04/ngx-datetime-range-picker#readme",
  "bugs": "https://github.com/BhavinPatel04/ngx-datetime-range-pickerissues",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/BhavinPatel04/ngx-datetime-range-picker"
  },
  "author": "Bhavin Patel",
  "private": false,
  "keywords": [
    "angular2",
    "angular4",
    "angular5",
    "angular6",
    "angular7",
    "ng2",
    "ngx",
    "daterangepicker",
    "datetimerangepicker",
    "material",
    "component",
    "directive",
    "daterange",
    "datetimerange",
    "date",
    "datetime",
    "moment",
    "lodash",
    "picker",
    "bootstrap",
    "font-awesome"
  ],
  "scripts": {
    "ng": "ng",
    "start": "ng serve",
    "test": "ng test",
    "lint": "lint-staged -c .lintstagedrc.json",
    "e2e": "ng e2e",
    "build": "npm run packagr",
    "build-dev": "ng build --dev --output-hashing=all && gulp build",
    "build-prod": "npm run packagr && gulp build",
    "format": "prettier \"**/*.{ts,js,html,css,scss,json,css,md}\" --write",
    "check-format": "prettier \"**/*.{js,json,css,md}\" -l",
    "current-branch": "$(git branch | grep \\* | cut -d ' ' -f2)",
    "pretty-quick-current-branch": "pretty-quick --staged --branch npm run current-branch",
    "stylelint-current-branch": "stylelint npm run current-branch --fix",
    "packagr": "ng-packagr -p package.json",
    "gh-pages": "ng build --prod --base-href=\"/ngx-datetime-range-picker/\" && ngh --dir dist",
    "test-ci": "npm run lint && npm run check-format && npm run test-generate-coverage",
    "test-coverage": "npm run test-generate-coverage && nyc report --reporter=html && opn ./coverage/index.html",
    "test-generate-coverage": "nyc -asc npm test",
    "coveralls": "nyc report --reporter=text-lcov | coveralls",
    "codecov": "nyc report --reporter=text-lcov > coverage.lcov && codecov"
  },
  "nyc": {
    "exclude": [
      "**/scripts/**",
      "**/coverage/**",
      "**/test/**",
      "**/dist/**"
    ]
  },
  "peerDependencies": {
    "bootstrap": "^4.2.1",
    "font-awesome": "^4.7.0",
    "lodash": "^4.17.11",
    "moment": "^2.23.0"
  },
  "dependencies": {
    "@angular/animations": "^7.1.4",
    "@angular/cdk": "^7.2.0",
    "@angular/common": "~7.1.0",
    "@angular/compiler": "~7.1.0",
    "@angular/core": "~7.1.0",
    "@angular/forms": "~7.1.0",
    "@angular/material": "^7.2.0",
    "@angular/platform-browser": "~7.1.0",
    "@angular/platform-browser-dynamic": "~7.1.0",
    "@angular/router": "~7.1.0",
    "bootstrap": "^4.2.1",
    "core-js": "^2.5.4",
    "font-awesome": "^4.7.0",
    "gulp": "^3.9.1",
    "gulp-rename": "^1.4.0",
    "lodash": "^4.17.11",
    "moment": "^2.23.0",
    "rxjs": "~6.3.3",
    "tslib": "^1.9.0",
    "zone.js": "~0.8.26"
  },
  "devDependencies": {
    "@angular-devkit/build-angular": "~0.11.0",
    "@angular-devkit/build-optimizer": "^0.11.4",
    "@angular/cli": "~7.1.4",
    "@angular/compiler-cli": "~7.1.0",
    "@angular/language-service": "~7.1.0",
    "@types/jasmine": "~2.8.8",
    "@types/jasminewd2": "~2.0.3",
    "@types/node": "~8.9.4",
    "angular-cli-ghpages": "^0.5.3",
    "codecov": "^3.1.0",
    "codelyzer": "~4.5.0",
    "coveralls": "^3.0.2",
    "husky": "^1.3.1",
    "jasmine-core": "~2.99.1",
    "jasmine-spec-reporter": "~4.2.1",
    "karma": "~3.1.1",
    "karma-chrome-launcher": "~2.2.0",
    "karma-coverage-istanbul-reporter": "~2.0.1",
    "karma-jasmine": "~1.1.2",
    "karma-jasmine-html-reporter": "^0.2.2",
    "lint-staged": "^8.1.0",
    "ng-packagr": "^4.4.5",
    "nyc": "^13.1.0",
    "prettier": "^1.15.3",
    "pretty-quick": "^1.8.0",
    "protractor": "~5.4.0",
    "stylelint": "^9.9.0",
    "ts-node": "~7.0.0",
    "tsickle": "^0.34.0",
    "tslint": "~5.11.0",
    "typescript": "~3.1.6"
  },
  "$schema": "./node_modules/ng-packagr/package.schema.json",
  "ngPackage": {
    "whitelistedNonPeerDependencies": [
      "."
    ],
    "lib": {
      "entryFile": "public_api.ts",
      "externals": {
        "lodash": "_",
        "moment": "moment"
      },
      "umdModuleIds": {
        "lodash": "_",
        "moment": "moment"
      }
    },
    "dest": "dist"
  }
}
